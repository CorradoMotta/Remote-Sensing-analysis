#Copyright (c) 2019 EUMETSAT

#Credits:

#This code was developed for EUMETSAT in part under contracts for the Copernicus 
#programme.

#--------------------------------------------------------------------
# Universal Sentinel Downloader configuration file
#--------------------------------------------------------------------
# All user options for download set here. Please pass your username
# and password via the available command line arguments accepted by
# Universal_Sentinel_Downloader.py is possible.
#
# Please consult README.md for more information
#--------------------------------------------------------------------
#--------------------------------------------------------------------

[account_options]
# please set at the command line if you can using -u and -p options
username=corramotta
password=Sforzini92

[storage_options]
# --- where you want data to be downloaded to
output_root_directory=C:\Users\corra\Documents\Koster_internship\4. Code\2. Notebook\Sentinel_downloader\data
# --- download data into data subdirectories (root/YYYY/MM/DD)?
output_sub_directory=False
# --- Prefix for log files (for error checking)
logfile=Sentinel_downloader
# --- Where to save results of the aggregation method
result_root_directory=C:\Users\corra\Documents\Koster_internship\4. Code\2. Notebook\Sentinel_downloader\result

#--------------------------------------------------------------------
#--------------------------------------------------------------------

[download_options]
# --- run download (if set to True, it will download and unzip the new data, 
# --- if set to False it will consider data already unzipped and stored in the root directory).
run_download=False

# --- specify retries
retries=5

# --- only get xfdumanifest.xml file
get_xml_only=False

# --- only get uuid and identifiers
search_data_only=False

# --- only get specified bands from a product. It is ENTIRELY up to the user to
# --- make sure they get the correct combination. Care should be given to get the
# --- required flags/geolocation. BEWARE: if you only select certain bands, you
# --- will NOT have access to some of SNAP's functionality.
get_specified_bands=True

# --- comma separated list of specified bands (e.g. chl_nn.nc,chl_oc4me.nc,wqsf.nc,geo_coordinates.nc)
specified_bands=chl_nn.nc,tsm_nn.nc,wqsf.nc,geo_coordinates.nc,time_coordinates.nc,xfdumanifest.xml

# --- specify platform required: Sentinel-1, Sentinel-2, Sentinel-3. Determines 
# --- request options used below.
platform=Sentinel-3

# --- specifiy satellite identifier (e.g. S3A for sentinel-3A), will select all 
# --- matching satellites if left blank
satellite=S3B

# --- Set the regional limits of you box of interest using footprint in format:
# --- lon1,lat1:lon2,lat2 (bottom left : top right). A blank field will result
# --- in a global search. Footprint is NOT a subsetter, but it will be applied to
# --- assess the coverage of any flagging selected (e.g cloud free % in defined
# --- zone, NOT in entire granule/dump!).
footprint=10.5463,57.7522:11.4183,59.1008

# --- When this filter is applied you will only download tiles/orbits that have 
# --- the required overlap with your footprint (in percent). Default empty value
# --- sets min overlap to 0%. 
polygon_overlap_percentage=50

# --- When this filter is applied you will only get the specified 'ascending' 
# --- or 'descending' passes. Default empty value will get both. NB: OLCI only
# --- has descending (daytime) passes.
pass_direction_filter=

# --- ingestion and sensing dates can be used exclusively, or in combination.
# --- sensing date start: YYYYMMDD (will be start of day), YYYYMMDDTHHMMSS, 
# --- NOW, NOW-xdays
sensing_date_start=20200801
# --- sensing date end: YYYYMMDD (will be the end of day), YYYYMMDDTHHMMSS, 
# --- NOW, NOW-xdays
sensing_date_end=20200831

# --- ingestion date start: YYYYMMDD (will be the end of day), YYYYMMDDTHHMMSS,
# --- NOW, NOW-xdays
ingestion_date_start=
# --- ingestion date end: YYYYMMDD (will be the end of day), YYYYMMDDTHHMMSS, 
# --- NOW, NOW-xdays
ingestion_date_end=

# --- specify non-standard URL to download from 
# --- Usual options for Sentinel-3 are: https://coda.eumetsat.int/ (Default; 
# --- applied if left blank) or https://codarep.eumetsat.int/
url=

#--------------------------------------------------------------------
#--------------------------------------------------------------------

[flag_options]
# FULLY TESTED FOR OLCI L1, OLCI L2 and SLSTR L1: All other file types have 
# integrated flags. You must make sure that the flag file you request is 
# appropriate for the product specified. Need to also specify the following:
# 1. proper flag netcdf file
# 2. the geo-cordinates file that contains the full lat/lon (not tie-point grid)
# 3. the lat/lon variable names in the geo-coordinates file
# 4. the flag variable name (e.g. for OLCI L2 this is WQSF in file wqsf.nc)
# 5. the flags to check against (comma separated)

# --- activate flag filter
filter_by_flag=True
# --- flag file: OLCI L1: qualityFlags.nc, OLCI L2: wqsf.nc.
flag_file=wqsf.nc
# --- coords file
coords_file=geo_coordinates.nc
# --- lon coord
coords_lon=longitude
# --- lat coord
coords_lat=latitude
# --- flag variable: OLCI L1: quality_flags, OLCI L2: WQSF
flag_variable=WQSF
# --- specify comma delimited flags to test for coverage 
# --- (e.g. for OLCI L1: sun-glint_risk, for OLCI L2: CLOUD)
filter_flag=CLOUD
# --- download data ONLY if more than the % below is not masked by the specified
# --- flag or flags.
flag_percentage=50

#--------------------------------------------------------------------
#--------------------------------------------------------------------

[sentinel3_request_options]
# --- empty options will not be used in the search
# --- producttype options: OL_2_WFR*, OL_1_EFR*, SL_1_RBT*, SL_2_WST*, SR_2_WAT*
producttype=OL_2_WFR*
# --- product level options: L1, L2
productlevel=L2
# --- instrumentshortname options: OLCI, SLSTR, SRAL
instrumentshortname=
# --- timeliness options: "Near Real Time", "Short Time Critical", 
# --- "Non Time Critical"
timeliness="Non Time Critical"
relativeorbitnumber=
orbitnumber=
cyclenumber=

#--------------------------------------------------------------------
#--------------------------------------------------------------------

[aggr_request_options]
# --- options for performing temporal aggregation over chl-a satellite images
# --- Band to aggregate (available options at the moment: chl, tsm)
# --- More than one options can be selected together. 
# --- Do not live space after comma. E.g. chl,tsm
aggr_band_name=chl
# --- Type of aggregation (available options at the moment: AVG, AVG_OUTLIER, MIN_MAX )
# --- More than one options can be selected together.
# --- Do not live space after comma. E.g. AVG,MIN_MAX
aggr_type=MIN_MAX
# --- Name of the final product. 
# --- Example: level-3_py_dynamic
aggr_file_name=aggregation_mm_product
# --- Desired file format.
# --- Possible options: BEAM-DIMAP, NetCDF4-CF, NetCDF4-BEAM
# --- For continue working on SNAP select BEAM-DIMAP or NETCDF4-BEAM for GIS or python  select NetCDF4-CF
aggr_file_format=NetCDF4-CF
# --- Mask expression
aggr_mask_expression=not(WQSF_lsb.INVALID or WQSF_lsb.CLOUD or WQSF_lsb.INLAND_WATER or WQSF_lsb.CLOUD_AMBIGUOUS or WQSF_lsb.OCNN_FAIL)
# --- Subset area WKT (it can be calculated on SNAP)
aggr_wkt=POLYGON ((8.923302175377243 59.55648108694149, 13.488748662344074 59.11388968719029,12.480488185001589 56.690625338725155, 8.212366327767503 57.12425256476263,8.923302175377243 59.55648108694149))
# --- Resolution in km (i.e. 0.3 means 300 meters)
aggr_resolution=0.3
# --- Super-sampling. To reduce Moir√® effect. Useful when the input spatial resolution is the same or lower than the output
# --- The square of the number of pixels used for super-sampling an input pixel into multiple sub-pixels. Use 1 for no supersampling
# --- In case of Sentinel-3 images, use aggr_super_sampling when you place an aggr_resolution 0.3 or higher (0.2, 0.1 etc) and you aggregate few imagery
aggr_super_sampling=1
# --- Boolean to specify whether  running pixel value extraction True or False
aggr_pixel_extraction=False
# --- Path to the file contaning the coordinates
# --- The file can be a csv or txt file with tabulator separated values
# --- Three columns needed with the following names: Name, Lon, Lat
aggr_extraction_file_path=C:\Users\corra\Documents\Koster_internship\4. Code\2. Notebook\Sentinel_downloader\coordinates_tab.txt
# --- Output file prefix
# --- The directory will be the one specified before for results
aggr_extraction_file_prefix=station_export_ss